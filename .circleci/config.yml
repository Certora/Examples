# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details

version: 2.1

orbs:
  aws-cli: circleci/aws-cli@3.1.4

commands:
  prepare:
    parameters:
      certora_cli_package:
        type: string
    
    steps:
      - add_ssh_keys:
            fingerprints:
              - "eb:f4:c0:f4:3d:48:cb:dc:c7:c6:8c:2d:af:7b:f5:8d"

      - run:  
          name: Fix ssh config
          command: echo "HostName github.com" >> ~/.ssh/config

      - add_ssh_keys:
          fingerprints:
            - "ed:e5:da:0f:fc:01:f3:35:d3:f2:5a:21:4b:27:37:38"

      - add_ssh_keys:
          fingerprints:
            - "SHA256:PSVM//UMgJbpyVsblT7INJ8goNIYOkm6UHcX10Krtmg"

      - run: 
          name: Fix ssh config
          command: echo "HostName github.com" >> ~/.ssh/config

      - checkout

      - run:
          name: Get the current version
          command: pip3.11 install << parameters.certora_cli_package >>
      
      - run:
          name: Get ConfRunnerInfra
          command: |
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            pip3.11 install git+ssh://git@github.com/Certora/ConfRunnerInfra.git
      
      - run:
          name: Get ExamplesRegtest
          command: |
            cd ~/
            git clone git@github.com-examplesregtest:Certora/ExamplesRegtest.git 
      
      - when:
          condition:
            equal: [ certora-cli-beta, << parameters.certora_cli_package >>]
          steps:
            - run:
                name: Switch ExamplesRegtest to cli-beta
                command: |
                  cd ~/ExamplesRegtest
                  git switch cli-beta
      
      - aws-cli/setup:
          role-arn: $CIRCLECI_OIDC_CDK_STAGING
          aws-region: AWS_DEFAULT_REGION
          session-duration: "10800"

jobs:
  examples-regtest:
    parameters:
      certora_cli_package:
        type: string
    docker:
      - image: &img public.ecr.aws/certora/cvt-image:2024.02.26-3326-f1cf60c
    resource_class: small
    working_directory: ~/repo
    steps:
      - prepare:
          certora_cli_package: << parameters.certora_cli_package >>

      - run:
          name: Run Reg Test
          command: |
            cd ~/ExamplesRegtest
            python3.11 RunNightlyTest.py \
              --path ../repo \
              --examples_repo_path ../repo \
              --conf_ignore conf_ignore.txt \
              --json_flags '{"run_source" : "LIGHT_TEST", "disable_auto_cache_key_gen": true}' \
              --send_message \
              --disable_cleanup

      - store_artifacts:
          path: ~/ExamplesRegtest/Report.csv
          destination: reports
      
      - store_test_results:
          path: ~/ExamplesRegtest

      - run:
          name: Save report to cloud
          command: |
            cd ~/ExamplesRegtest
            ReportUploader --table_name Examples-<< parameters.certora_cli_package >>
          when: always
  
  
  test-certoraMutate:
    parameters:
      certora_cli_package:
        type: string
    docker:
      - image: &img public.ecr.aws/y7e8i2v6/cvt-image:2023.10.25-2197-cf04537
    resource_class: small
    working_directory: ~/repo
    steps:
      - prepare:
          certora_cli_package: << parameters.certora_cli_package >>

      - run:
          name: Test certoraMutate
          command: |
            cd ~/ExamplesRegtest
            python3.11 RunMutationTest.py --examples_repo_path ../repo

      - store_test_results:
          path: ~/repo


parameters:
  run_regtest:
    default: false
    type: boolean
  
  run_regtest_beta:
    default: false
    type: boolean


workflows:
  version: 2
  # Nightly builds will run every day at 4am GMT
  examples-nightly:
    triggers:
      - schedule:
          cron: "0 4 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - examples-regtest:
          certora_cli_package: certora-cli
          context: aws_staging
      - test-certoraMutate:
          certora_cli_package: certora-cli
          context: aws_staging

  examples-manual:
    when: << pipeline.parameters.run_regtest >>
    jobs:
      - examples-regtest:
          certora_cli_package: certora-cli
          context: aws_staging
      - test-certoraMutate:
          certora_cli_package: certora-cli
          context: aws_staging

  examples-nightly-beta:
    triggers:
      - schedule:
          cron: "0 4 * * *"
          filters:
            branches:
              only:
                - cli-beta
    jobs:
      - examples-regtest:
          certora_cli_package: certora-cli-beta
          context: aws_staging
      - test-certoraMutate:
          certora_cli_package: certora-cli-beta
          context: aws_staging

  examples-manual-beta:
    when: << pipeline.parameters.run_regtest_beta >>
    jobs:
      - examples-regtest:
          certora_cli_package: certora-cli-beta
          context: aws_staging
      - test-certoraMutate:
          certora_cli_package: certora-cli-beta
          context: aws_staging
