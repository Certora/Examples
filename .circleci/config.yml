# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details

version: 2.1

orbs:
  aws-cli: circleci/aws-cli@3.1.4

commands:  
  prepare:
    parameters:
      certora_cli_package:
        type: string
    
    steps:
      - add_ssh_keys:
            fingerprints:
              - "eb:f4:c0:f4:3d:48:cb:dc:c7:c6:8c:2d:af:7b:f5:8d"
      
      - run:  
          name: Fix ssh config
          command: echo "HostName github.com" >> ~/.ssh/config

      - add_ssh_keys:
          fingerprints:
            - "ed:e5:da:0f:fc:01:f3:35:d3:f2:5a:21:4b:27:37:38"
      
      - add_ssh_keys:
          fingerprints:
            - "SHA256:PSVM//UMgJbpyVsblT7INJ8goNIYOkm6UHcX10Krtmg"
      
      - run: 
          name: Fix ssh config
          command: echo "HostName github.com" >> ~/.ssh/config

      - checkout

      - run:
          name: Get the current version
          command: pip3.11 install << parameters.certora_cli_package >>
      
      - run:
          name: Get ConfRunnerInfra
          command: |
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            pip3.11 install git+ssh://git@github.com/Certora/ConfRunnerInfra.git

      - run:
          name: Get ExamplesRegtest
          command: |
            cd ~/
            git clone git@github.com-examplesregtest:Certora/ExamplesRegtest.git
      
      - run:
            name: Switch to cli-beta
            command: |
              cd ~/ExamplesRegtest
              if [ "<< parameters.certora_cli_package >>" == "certora-cli-beta" ] || [ "<< parameters.certora_cli_package >>" == "certora-cli-alpha-master" ]; then
                git switch cli-beta 
              fi
      
      - aws-cli/setup:
          role-arn: $CIRCLECI_OIDC_CDK_STAGING
          aws-region: AWS_DEFAULT_REGION
          session-duration: "10800"

jobs:
  
  check-release:
    docker:
      - image: &cvt public.ecr.aws/certora/cvt-image:2024.10.16-4473-ba570af
    resource_class: small
    working_directory: ~/repo
    steps:
      - add_ssh_keys:
          fingerprints:
            - "eb:f4:c0:f4:3d:48:cb:dc:c7:c6:8c:2d:af:7b:f5:8d"
            - "ed:e5:da:0f:fc:01:f3:35:d3:f2:5a:21:4b:27:37:38"
            - "SHA256:PSVM//UMgJbpyVsblT7INJ8goNIYOkm6UHcX10Krtmg"
      
      - run: 
          name: Fix ssh config
          command: echo "HostName github.com" >> ~/.ssh/config
      
      - checkout

      - run:
          name: Get ExamplesRegtest
          command: |
            cd ~/
            git clone git@github.com-examplesregtest:Certora/ExamplesRegtest.git 
      
      - run:
          name: Install packages
          command: |
            pip3.11 install requests
            pip3.11 install semver
      
      - run:
          name: Check Certora CLI Releases
          command: |
            cd ~/ExamplesRegtest
            python3.11 ReleaseCheckAndTrigger.py

  examples-regtest:
    parameters:
      certora_ci_name:
        type: string
      certora_cli_package:
        type: string
      examples_repo_path:
        type: string
        default: "../repo"
      commit_sha:
        type: string
        default: ""
    docker:
      - image: *cvt
    resource_class: small
    working_directory: ~/repo
    environment:
      CERTORA_CI_CLIENT: << parameters.certora_ci_name >>
    steps:
      - prepare:
          certora_cli_package: << parameters.certora_cli_package >>

      - run:
          name: Run Reg Test
          command: |
            cd ~/ExamplesRegtest
            python3.11 CopyExpected.py
            command="Regression --path << parameters.examples_repo_path >> --conf_ignore conf_ignore.txt --json_flags '{\"run_source\": \"LIGHT_TEST\", \"disable_auto_cache_key_gen\": true, \"group_id\": \"$CIRCLE_WORKFLOW_ID\"}' --send_message --checks Verification"
            if [ "<< parameters.certora_cli_package >>" == "certora-cli-alpha-master" ]; then
              if [ -n "<< pipeline.parameters.commit_sha >>" ]; then
                command="$command --commit_sha1 << pipeline.parameters.commit_sha >>"
              else
                command="$command --prover_version master"
              fi
            fi
            eval $command
 
      - run:
          name: Install ReportAnalysis package and execute ReportAnalyzer 
          command: |
            pip3.11 install git+ssh://git@github.com-reportanalysis/Certora/ReportAnalysis.git
            ReportAnalyzer --ci_client "Examples Nightly"
          when: on_fail



      - store_artifacts:
          path: ~/ExamplesRegtest/Report.csv
          destination: reports
      
      - store_test_results:
          path: ~/ExamplesRegtest
  
  
  test-certoraMutate:
    parameters:
      certora_cli_package:
        type: string
    docker:
      - image: *cvt
    resource_class: small
    working_directory: ~/repo
    steps:
      - prepare:
          certora_cli_package: << parameters.certora_cli_package >>

      - run:
          name: Test certoraMutate
          command: |
            cd ~/ExamplesRegtest
            command="python3.11 RunMutationTest.py --examples_repo_path ../repo"
            if [ "<< parameters.certora_cli_package >>" == "certora-cli-alpha-master" ]; then
              command="$command --prover_version master"
            fi
            eval $command

      - store_test_results:
          path: ~/repo


parameters:
  run_regtest:
    default: false
    type: boolean
  
  run_regtest_beta:
    default: false
    type: boolean
  
  run_check_and_trigger:
    default: false
    type: boolean

  run_examples_nightly:
    default: false
    type: boolean
  
  examples_repo_path:
    type: string
    default: "../repo"
  
  commit_sha:
    default: ""
    type: string


workflows:

  # Nightly check and trigger
  check-and-trigger:
      triggers:
        - schedule:
            cron: "0 4 * * *"
            filters:
              branches:
                only:
                  - master
      jobs:
        - check-release

  # Manual check and trigger
  manual-check-and-trigger:
    when: << pipeline.parameters.run_check_and_trigger >>
    jobs:
      - check-release
  
  # Trigger by check-and-trigger
  examples-release:
    when: << pipeline.parameters.run_regtest >>
    jobs:
      - examples-regtest:
          certora_ci_name: Examples Release
          certora_cli_package: certora-cli
          context: aws_staging
      - test-certoraMutate:
          certora_cli_package: certora-cli
          context: aws_staging
  
  # Trigger by check-and-trigger
  examples-beta:
    when: << pipeline.parameters.run_regtest_beta >>
    jobs:
      - examples-regtest:
          certora_ci_name: Examples Beta
          certora_cli_package: certora-cli-beta
          context: aws_staging
      - test-certoraMutate:
          certora_cli_package: certora-cli-beta
          context: aws_staging

  # Run Nightly cli-beta with cli-alpha-master package
  examples-nightly:
    triggers:
      - schedule:
          cron: "0 3 * * *"
          filters:
            branches:
              only:
                - cli-beta
    jobs:
      - examples-regtest:
          certora_ci_name: Examples Nightly
          certora_cli_package: certora-cli-alpha-master
          context: aws_staging
      - test-certoraMutate:
          certora_cli_package: certora-cli-alpha-master
          context: aws_staging
  
  examples-manual:
    when: << pipeline.parameters.run_examples_nightly >>
    jobs:
      - examples-regtest:
          certora_ci_name: Examples Nightly Manual
          certora_cli_package: certora-cli-alpha-master
          examples_repo_path: << pipeline.parameters.examples_repo_path >>
          context: aws_staging
      - test-certoraMutate:
          certora_cli_package: certora-cli-alpha-master
          context: aws_staging
